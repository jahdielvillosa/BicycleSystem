/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bicyclesystem;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.CallableStatement;

//SQL connections
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author Villosa
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    private BikeData adminData = new BikeData();
    private int width;
    private int height;
    private int table1Row = 0;
    private int userCount = 0;
    private int allentries1Row = 0;
    DefaultTableModel model;
    
    private int test=0;
    
    //Other frames/windows
    Search searchWindow;
    Register registerWindow;
    FrameAbout aboutWindow;
    boolean dashboardActive,searchActive,registerActive,aboutActive;
    
    //bicycle counters
    int available,rented,repair,reserved;
    
    //station bicycles counters
    int station1_bikeCount, station2_bikeCount;
    
    public Dashboard() throws IOException {
        
        //Display other windows
        registerWindow = new Register();
        registerWindow.display();
        
        searchWindow = new Search();
        searchWindow.display();
        
        aboutWindow = new FrameAbout();
        aboutWindow.display();
        dashboardActive = true; //default
        
        //dashboards
        adminData.getBicycleStatus_Update();
        initComponents();
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        width = (int) screenSize.getWidth();
        height = (int) screenSize.getHeight();
        this.setSize(width, height);
        Timer timer = new Timer();
        
        //Jtable1 generate table model
        getNumberRows_bikes_status();
        model = new DefaultTableModel(new String[] {"BikeName","Station","Status","User_ID","Time_Rented"},0);
        jTable1.setModel(model);
        model.setNumRows(table1Row);
        model.setRowCount(table1Row);

        
        timer.schedule( new TimerTask() {
            public void run() {
               // do your work 
            table_notReturned();
               
            if(dashboardActive == true){
               getNumberRows_users();
               getBicycleUpdate();      //Update table
               update_all();            //updates all tables
            }
            }
         }, 0,2*1000); //time
        
        
        try {
            play_Welcome() ;
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
   
    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        DashboardPanel = new javax.swing.JPanel();
        dashboardPanel = new javax.swing.JPanel();
        DashboardBtn = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        SearchBtn = new javax.swing.JLabel();
        registerPanel = new javax.swing.JPanel();
        registerBtn = new javax.swing.JLabel();
        aboutPanel = new javax.swing.JPanel();
        aboutBtn = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        notReturnedTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        station2_bikeLabel = new javax.swing.JLabel();
        station1_bikeLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bikeAvailableLabel = new javax.swing.JLabel();
        bikeRentedLabel = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        bikeReservationLabel = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        bikeRepairLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        bikeTotalLabel = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        userCountLabel = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(47, 64, 80));

        DashboardPanel.setBackground(new java.awt.Color(47, 64, 80));

        dashboardPanel.setBackground(new java.awt.Color(19, 123, 123));

        DashboardBtn.setBackground(new java.awt.Color(102, 102, 102));
        DashboardBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        DashboardBtn.setForeground(new java.awt.Color(204, 204, 204));
        DashboardBtn.setText("     DASHBOARD");
        DashboardBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DashboardBtn.setMaximumSize(new java.awt.Dimension(104, 22));
        DashboardBtn.setMinimumSize(new java.awt.Dimension(104, 22));
        DashboardBtn.setPreferredSize(new java.awt.Dimension(104, 22));
        DashboardBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DashboardBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DashboardBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DashboardBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DashboardBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DashboardBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardPanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(DashboardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        searchPanel.setBackground(new java.awt.Color(47, 64, 80));

        SearchBtn.setBackground(new java.awt.Color(102, 102, 102));
        SearchBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(204, 204, 204));
        SearchBtn.setText("     SEARCH");
        SearchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SearchBtnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        registerPanel.setBackground(new java.awt.Color(47, 64, 80));

        registerBtn.setBackground(new java.awt.Color(102, 102, 102));
        registerBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(204, 204, 204));
        registerBtn.setText("     REGISTER");
        registerBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registerBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SearchBtnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        aboutPanel.setBackground(new java.awt.Color(47, 64, 80));
        aboutPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutPanelMouseExited(evt);
            }
        });

        aboutBtn.setBackground(new java.awt.Color(102, 102, 102));
        aboutBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        aboutBtn.setForeground(new java.awt.Color(204, 204, 204));
        aboutBtn.setText("     ABOUT");
        aboutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aboutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutBtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aboutBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout aboutPanelLayout = new javax.swing.GroupLayout(aboutPanel);
        aboutPanel.setLayout(aboutPanelLayout);
        aboutPanelLayout.setHorizontalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(aboutBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        aboutPanelLayout.setVerticalGroup(
            aboutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutPanelLayout.createSequentialGroup()
                .addComponent(aboutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DashboardPanelLayout = new javax.swing.GroupLayout(DashboardPanel);
        DashboardPanel.setLayout(DashboardPanelLayout);
        DashboardPanelLayout.setHorizontalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(registerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aboutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DashboardPanelLayout.setVerticalGroup(
            DashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(aboutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(3, 28, 53));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 32)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setText("I/O");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 32)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 102));
        jLabel2.setText("Project");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(20, 20, 20))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        jPanel21.setBackground(new java.awt.Color(19, 123, 123));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("CpE I/O  - 2016");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(243, 243, 244));
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));

        logoutBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(102, 102, 102));
        logoutBtn.setText("Logout");
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutBtnMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Admin");

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText(" Welcome to Bicycle Sharing System");

        jPanel18.setBackground(new java.awt.Color(26, 179, 148));
        jPanel18.setPreferredSize(new java.awt.Dimension(1008, 2));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addGap(31, 31, 31))
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Bicycle", "Station", "Status", "User", "Time Rented"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setRowHeight(30);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }
        jTable1.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                //l.setBorder(new LineBorder(Color.black, 1));
                l.setBackground(Color.gray);

                // setFont(new Font("Consolas", Font.BOLD, 14));
                setForeground(Color.WHITE);
                return l;
            }
        });

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Dashboard");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Welcome Admin,");

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("You can view the informations and status");

        jLabel28.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("of the bicycles and stations here.");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Bicycle status");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel17)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jPanel13.setBackground(new java.awt.Color(19, 123, 123));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Not Returned");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel12)
                .addGap(2, 2, 2))
        );

        notReturnedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Bicycle", "User", "Usage Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        notReturnedTable.setToolTipText("");
        notReturnedTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        notReturnedTable.setRowHeight(23);
        notReturnedTable.setSurrendersFocusOnKeystroke(true);
        notReturnedTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(notReturnedTable);
        if (notReturnedTable.getColumnModel().getColumnCount() > 0) {
            notReturnedTable.getColumnModel().getColumn(0).setResizable(false);
            notReturnedTable.getColumnModel().getColumn(1).setResizable(false);
            notReturnedTable.getColumnModel().getColumn(2).setResizable(false);
        }
        notReturnedTable.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                //l.setBorder(new LineBorder(Color.black, 1));
                l.setBackground(Color.gray);

                // setFont(new Font("Consolas", Font.BOLD, 14));
                setForeground(Color.WHITE);
                return l;
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jPanel14.setBackground(new java.awt.Color(0, 153, 102));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Station status");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel13)
                .addGap(2, 2, 2))
        );

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel16.setText("Station 1");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel18.setText("Station 2");

        jLabel26.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel26.setText("Available Bicyles: ");

        jLabel27.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel27.setText("Available Bicyles: ");

        station2_bikeLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        station2_bikeLabel.setText("1");

        station1_bikeLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        station1_bikeLabel.setText("2");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(station1_bikeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(station2_bikeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(165, Short.MAX_VALUE))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator5)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator6)
                .addGap(10, 10, 10))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(station1_bikeLabel))
                .addGap(34, 34, 34)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(station2_bikeLabel))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 35, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Updates"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setRowHeight(50);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

                JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                //l.setBorder(new LineBorder(Color.black, 1));
                l.setBackground(Color.gray);

                // setFont(new Font("Consolas", Font.BOLD, 14));
                setForeground(Color.WHITE);
                return l;
            }
        });

        jPanel15.setBackground(new java.awt.Color(0, 153, 102));

        jLabel29.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("News Updates");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel29)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel29)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Bicycles");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Available: ");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel9.setText("Rented: ");

        bikeAvailableLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bikeAvailableLabel.setText("0");

        bikeRentedLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bikeRentedLabel.setText("0");

        jLabel31.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel31.setText("Total: ");

        bikeReservationLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bikeReservationLabel.setText("0");

        jPanel19.setBackground(new java.awt.Color(0, 153, 204));
        jPanel19.setPreferredSize(new java.awt.Dimension(0, 3));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel10.setText("Reserved: ");

        bikeRepairLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bikeRepairLabel.setText("0");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel20.setText("Repair: ");

        bikeTotalLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bikeTotalLabel.setText("0");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bikeTotalLabel))
                    .addComponent(jLabel6)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bikeRentedLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bikeAvailableLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bikeRepairLabel)
                    .addComponent(bikeReservationLabel))
                .addGap(36, 36, 36))
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(bikeAvailableLabel)
                    .addComponent(jLabel10)
                    .addComponent(bikeReservationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(bikeRentedLabel)
                    .addComponent(jLabel20)
                    .addComponent(bikeRepairLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(bikeTotalLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setText("Users");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel14.setText("Total Count: ");

        userCountLabel.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        userCountLabel.setText("56");

        jPanel20.setBackground(new java.awt.Color(0, 153, 204));
        jPanel20.setPreferredSize(new java.awt.Dimension(0, 3));

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(userCountLabel))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DashboardBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardBtnMouseExited
        if(dashboardActive){ 
            dashboardPanel.setBackground(new Color(19,123,123)); //dark green
            DashboardBtn.setForeground(new Color(204,204,204)); //dark navy blue
        }else{
            dashboardPanel.setBackground(new Color(47,64,80)); //dark navy blue
            DashboardBtn.setForeground(new Color(204,204,204)); //gray
        }
    }//GEN-LAST:event_DashboardBtnMouseExited

    private void DashboardBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardBtnMouseEntered
        // TODO add your handling code here:
        dashboardPanel.setBackground(new Color(26,179,148)); //light lime (green)
        DashboardBtn.setForeground(new Color(255,255,255)); //dark navy blue
        play_Hover();
    }//GEN-LAST:event_DashboardBtnMouseEntered

    private void DashboardBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardBtnMouseClicked
        // TODO add your handling code here:
        dashboardPanel.setBackground(new Color(19,123,123)); //dark green
        searchPanel.setBackground(new Color(47,64,80)); //dark navy blue
        registerPanel.setBackground(new Color(47,64,80)); //dark navy blue
        aboutPanel.setBackground(new Color(47,64,80)); //dark navy blue
         //switch to other window
        
        
        dashboardActive = true;
        searchActive    = false;
        registerActive  = false;
        aboutActive     = false;
        
    }//GEN-LAST:event_DashboardBtnMouseClicked

    private void SearchBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseEntered
        // TODO add your handling code here:
        searchPanel.setBackground(new Color(26,179,148)); //light lime (green)
        SearchBtn.setForeground(new Color(255,255,255)); //white
        play_Hover();
    }//GEN-LAST:event_SearchBtnMouseEntered

    private void SearchBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseExited
        // TODO add your handling code here:
        if(searchActive){ 
            searchPanel.setBackground(new Color(19,123,123)); //dark green
            SearchBtn.setForeground(new Color(204,204,204)); //dark navy blue
        }else{
            searchPanel.setBackground(new Color(47,64,80)); //dark navy blue
            SearchBtn.setForeground(new Color(204,204,204)); //gray
        }
    }//GEN-LAST:event_SearchBtnMouseExited

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
        // TODO add your handling code here:
        SearchBtn.setForeground(new Color(255,255,255));
        searchPanel.setBackground(new Color(19,123,123)); //dark green
        dashboardPanel.setBackground(new Color(47,64,80)); //dark navy blue
        registerPanel.setBackground(new Color(47,64,80)); //dark navy blue
        aboutPanel.setBackground(new Color(47,64,80)); //dark navy blue
        //switch to other window
        
        dashboardActive = false;
        searchActive    = true;
        registerActive  = false;
        aboutActive     = false;
        
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void registerBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnMouseEntered
         // TODO add your handling code here:
        registerPanel.setBackground(new Color(26,179,148)); //light lime (green)
        registerBtn.setForeground(new Color(255,255,255)); //white
        play_Hover();
    }//GEN-LAST:event_registerBtnMouseEntered

    private void registerBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnMouseExited
         // TODO add your handling code here:
        if(registerActive){ 
            registerPanel.setBackground(new Color(19,123,123)); //dark green
            registerBtn.setForeground(new Color(204,204,204)); //dark navy blue
        }else{
            registerPanel.setBackground(new Color(47,64,80)); //dark navy blue
            registerBtn.setForeground(new Color(204,204,204)); //gray
        }
    }//GEN-LAST:event_registerBtnMouseExited

    private void registerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnMouseClicked
        // TODO add your handling code here:
        
        searchActive    = false;
        registerActive  = true;
        aboutActive     = false;
        dashboardActive = false;
        
        
        registerBtn.setForeground(new Color(255,255,255));
        registerPanel.setBackground(new Color(19,123,123)); //dark green
        dashboardPanel.setBackground(new Color(47,64,80)); //dark navy blue
        searchPanel.setBackground(new Color(47,64,80)); //dark navy blue
        aboutPanel.setBackground(new Color(47,64,80)); //dark navy blue
        //switch to other window
        
        
    }//GEN-LAST:event_registerBtnMouseClicked

    private void DashboardBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DashboardBtnMousePressed
        // TODO add your handling code here:
        DashboardBtn.setForeground(new Color(255,255,255)); //white
        dashboardPanel.setBackground(new Color(19,123,123)); //dark navy green#
        play_Click();
        
        registerWindow.setVisible(false);
        searchWindow.setVisible(false);
        aboutWindow.setVisible(false);
    }//GEN-LAST:event_DashboardBtnMousePressed

    private void SearchBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMousePressed
         // TODO add your handling code here:
        SearchBtn.setForeground(new Color(255,255,255)); //white
        searchPanel.setBackground(new Color(19,123,123)); //dark navy green
        play_Click();
        
        searchWindow.setVisible(true);
        registerWindow.setVisible(false);
        aboutWindow.setVisible(false);
    }//GEN-LAST:event_SearchBtnMousePressed

    private void registerBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnMousePressed
        // TODO add your handling code here:
        registerBtn.setForeground(new Color(255,255,255)); //white
        registerPanel.setBackground(new Color(19,123,123)); //dark navy green
        play_Click();
        
        registerWindow.setVisible(true);
        searchWindow.setVisible(false);
        aboutWindow.setVisible(false);
    }//GEN-LAST:event_registerBtnMousePressed
  
    private void logoutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseEntered
        // TODO add your handling code here:
        logoutBtn.setForeground(new Color(0,153,153)); //white
        play_Hover();
    }//GEN-LAST:event_logoutBtnMouseEntered

    private void logoutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseExited
        // TODO add your handling code here:
        logoutBtn.setForeground(new Color(102,102,102)); //white
    }//GEN-LAST:event_logoutBtnMouseExited

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        
        play_Click();
        Timer timer = new Timer();
        
        timer.schedule( new TimerTask() {
            public void run() {

                try {
                    // TODO add your handling code here:
                    adminData.con.close();
                } catch (SQLException ex) {
               //     Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }

                System.exit(0);
          
            }
         }, 0, 1*2000); //time
    }//GEN-LAST:event_logoutBtnMouseClicked

    private void SearchBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseReleased
        
        
    }//GEN-LAST:event_SearchBtnMouseReleased

    private void aboutBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutBtnMouseEntered
        aboutPanel.setBackground(new Color(26,179,148)); //light lime (green)
        aboutBtn.setForeground(new Color(255,255,255)); //white
        play_Hover();
    }//GEN-LAST:event_aboutBtnMouseEntered

    private void aboutBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutBtnMouseExited
        // TODO add your handling code here:
        if(aboutActive){ 
            aboutPanel.setBackground(new Color(19,123,123)); //dark green
            aboutBtn.setForeground(new Color(204,204,204)); //dark navy blue
        }else{
            aboutPanel.setBackground(new Color(47,64,80)); //dark navy blue
            aboutBtn.setForeground(new Color(204,204,204)); //gray
        }
    }//GEN-LAST:event_aboutBtnMouseExited

    private void aboutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutBtnMouseClicked
        // TODO add your handling code here:
        aboutBtn.setForeground(new Color(255,255,255));
        
        searchPanel.setBackground(new Color(47,64,80)); //dark green
        dashboardPanel.setBackground(new Color(47,64,80)); //dark navy blue
        registerPanel.setBackground(new Color(47,64,80)); //dark navy blue
        aboutPanel.setBackground(new Color(19,123,123));
        //switch to other window
        
        dashboardActive = false;
        searchActive    = false;
        registerActive  = false;
        aboutActive     = true;
        
        aboutWindow.setAlwaysOnTop(true);
        
    }//GEN-LAST:event_aboutBtnMouseClicked

    private void aboutPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutPanelMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutPanelMouseEntered

    private void aboutPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutPanelMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutPanelMouseExited

    private void aboutPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutPanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutPanelMouseClicked

    private void aboutBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutBtnMousePressed
        // TODO add your handling code here:
        aboutBtn.setForeground(new Color(255,255,255)); //white
        aboutPanel.setBackground(new Color(19,123,123)); //dark navy green
        
        searchWindow.setVisible(false);
        registerWindow.setVisible(false);
        aboutWindow.setVisible(true);
        play_Click();
    }//GEN-LAST:event_aboutBtnMousePressed


    /**
     * @param args the command line arguments
     */
    public void display() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Dashboard().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
    }
    
//------ START OF USER DEFINED FUNCTIONS-----//
    
    /*
        Periodically checks the update status from the database
    Whenever a the status is true, the update is taken into action
    and displayed and set it to false after the update.
    */
    public void check_update(){
        //TableLable.setText("All Entries");
        int    c=0,r=0,rowcount = 0;
        String bikeName = null,station = null,status = null,time = null;
        String station_r = null,status_r = null,time_r = null;
        int    bikeId = 0,user = 0,duration = 0,post_status=0,statusID=0;
        String message;
        CallableStatement cs = null;
         
        Vector<String> data= new Vector<String>();
        Date mydate = new Date();

        //create a jtable model
        DefaultTableModel dm = new DefaultTableModel(0, 0);
        String title[]       = new String[]{"UPDATE"};
        dm.setColumnIdentifiers(title);
        
        jTable2.setModel(dm);
        getNumberRows_all_enties();
        dm.setRowCount(allentries1Row);
        jTable2.setRowSorter(null);
        
        try {
            ResultSet results = adminData.rs;
            Statement stmt    = adminData.stmt;
            results           = stmt.executeQuery("SELECT * FROM all_entries");
            
            while (results.next()){
                rowcount++;
            }
            
            dm.setRowCount(rowcount);
            results = stmt.executeQuery("SELECT * FROM `all_entries` ORDER BY `Time` DESC");
            
            while (results.next()){
                bikeId    = results.getInt("Bike_ID");
                bikeName  = results.getString("BikeName");
                station   = results.getString("Station");
                time      = results.getString("Time");
                status    = results.getString("Status"); //or last action taken
                user      = results.getInt("User");
                post_status =  results.getInt("post_status");
              //  statusID = results.getInt("return_statusID");
                
                
                System.out.println("Update - "+statusID + " " + bikeName + " " + station + " " + time
                        + status + " " + user+  "-" + post_status);
                
                if(status.equalsIgnoreCase("Rented")){
                    message = bikeName +" is rented by "+ user   + " - " + time;
                    
                    
                }else if(status.equalsIgnoreCase("Reserved")){
                    message = bikeName +" is reserved by "+ user + " - " + time;
                    
                }else{
                    message = bikeName +" is returned by "+ user + " - " + time;
                    
                }
                
                c=0;    //reset columnx
                jTable2.setValueAt(message, r, c);
                c++;
                r++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     *  When a new entry is added in the all_entries table, the bike_status
     * is updated.
     */
    public void getBicycleUpdate(){
        int c=0,r=0,rowcount=0;
        String bikeName = null,station = null,status = null,time = null, ret_station = null, ret_time = null;
        int bikeId = 0,user = 0,duration = 0, ret_flag = 0;
        available=0;rented=0;repair=0;reserved=0;
        station1_bikeCount = 0; station2_bikeCount = 0;
        Date mydate = new Date();
        CallableStatement cs = null;
        
        check_update(); // upadte 
        try {
            
            ResultSet results = adminData.rs;
            Statement stmt    = adminData.stmt;
            results           = stmt.executeQuery("SELECT * FROM bike_status");
            
            while (results.next()){
                bikeId      = results.getInt("BikeID");
                bikeName    = results.getString("BikeName");
                station     = results.getString("Station_Rented");
                status      = results.getString("Status");
                user        = results.getInt("User_ID");
                time        = results.getString("Time_Rented");
                duration    = results.getInt("Duration");
                ret_station = results.getString("station_returned");
                ret_time    = results.getString("time_returned");
                ret_flag    = results.getInt("return_flag");
                
                System.out.println(bikeId + " " + bikeName + " " + station + " "
                        + status + " " + user + " " + time+ " " + duration + " - " + mydate.toString());
                
                //get status for dashboard update
                get_bike_available(status);
                
                
                c=0;    //reset column
                if(status.equalsIgnoreCase("Available") ){
                    //add entry on the table 
                    
                    jTable1.setValueAt(bikeName, r, c);
                    c++;
                    jTable1.setValueAt(ret_station, r, c);
                    c++;
                    jTable1.setValueAt(status, r, c);
                    c++;
                    jTable1.setValueAt("none", r, c);
                    c++;
                    jTable1.setValueAt("none", r, c);
                    c++;
                    
                    get_Station_bikes(ret_station, status);
                    
                    if(ret_flag == 1){
                    //  Update bike_entries table when bicycle transcation is completed
                        
                        String sqlstmt = "INSERT INTO bike_entries "
                            + "values(0,'"+bikeName+"','Renturned','"+station+"','"+time+"','"+ret_station+"','"+ret_time+"',"+user+","+duration+")"; //SQL Statement
                        //try and catch error
                      
                        cs = adminData.con.prepareCall(sqlstmt); 
                        cs.execute(); //execute the sql command 
       
                        //Reset the status of the bicycle when it is returned
                        String sqlstmt2 =  "UPDATE bike_status SET "
                            + "Station_Rented = 'none', Time_Rented = 'none',Status = 'Available',"
                            + "User_ID = 0, Time_Returned = 'none', return_flag = 0 "
                            + "WHERE `bike_status`.`BikeName` = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt2); 
                        cs.execute(); //execute the sql command 
                        
                        System.out.println(bikeName + "is returned-----------------------------------------");
                    }    
                 
                }else if(status.equalsIgnoreCase("Reserved") ){
                        
                    //add entry on the table for reservation
                    jTable1.setValueAt(bikeName, r, c);
                    c++;
                    jTable1.setValueAt(station, r, c);
                    c++;
                    jTable1.setValueAt(status, r, c);
                    c++;
                    jTable1.setValueAt(user, r, c);
                    c++;
                    jTable1.setValueAt(time, r, c);
                    c++;
                }else{
                        //add entry on the table 

                       jTable1.setValueAt(bikeName, r, c);
                       c++;
                       jTable1.setValueAt(station, r, c);
                       c++;
                       jTable1.setValueAt(status, r, c);
                       c++;
                       jTable1.setValueAt(user, r, c);
                       c++;
                       jTable1.setValueAt(time, r, c);
                       c++;

                    }
                    r++;

            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        sortTable();
        dashboard_Update();
    }
    
   public void getNumberRows_bikes_status(){
        try{
           ResultSet results = adminData.rs;
           Statement stmt    = adminData.stmt;
           results           = stmt.executeQuery("SELECT * FROM bike_status");
           if(results.last()){
              table1Row  = results.getRow();
           } else {
               table1Row = 0; //just cus I like to always do some kinda else statement.
           }
        } catch (Exception e){
           System.out.println("Error getting row count");
           e.printStackTrace();
        }
    }
   
    public void getNumberRows_all_enties(){
        try{
           // adminData.getBicycleStatus_Update();     
           ResultSet results = adminData.rs;
           Statement stmt    = adminData.stmt;
           results           = stmt.executeQuery("SELECT * FROM all_entries");
           if(results.last()){
               allentries1Row = results.getRow();
           } else {
               allentries1Row = 0; 
           }
        } catch (Exception e){
           System.out.println("Error getting row count");
           e.printStackTrace();
        }
        
        System.out.println("Rows2:" + allentries1Row);
    }
   
   
   public void getNumberRows_users(){
        try{
           ResultSet results = adminData.rs;
           Statement stmt    = adminData.stmt;
           results           = stmt.executeQuery("SELECT * FROM users_registered");
           
           if(results.last()){
              userCount  = results.getRow();
           } else {
               userCount = 0; //just cus I like to always do some kinda else statement.
           }
        } catch (Exception e){
           System.out.println("Error getting row count");
           e.printStackTrace();
        }
    }
   
   public void sortTable(){
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable1.getModel());
        jTable1.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();

        int columnIndexToSort = 4;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));

        sorter.setSortKeys(sortKeys);
        sorter.sort();
    
   }
   
   
   
    public void table_notReturned(){

        int    c=0,r=0;
        String bikeName = null,station = null,status = null,time = null;
        int    user = 0,duration = 0, bikeId = 0, statusID = 0;
        CallableStatement cs = null;
        
        Vector<String> data= new Vector<String>();
        
        Date date = new Date();
        String returndate = new SimpleDateFormat("EEE d MMM yyy HH:mm:ss").format(date);
        
        //create a jtable model
        DefaultTableModel dm = new DefaultTableModel(0, 0);
        String title[] = new String[]{"BicycleName", "User", "Duration"};
        dm.setColumnIdentifiers(title);
        
        notReturnedTable.setModel(dm);
        dm.setRowCount(table1Row);
        
        try {
            //adminData.getBicycleStatus_Update();
            ResultSet results = adminData.rs;
            Statement stmt = adminData.stmt;
           // table1Row = results.ge
            results = stmt.executeQuery("SELECT * FROM bike_status");
            
            while (results.next()){
                duration = 0;
                bikeId   = results.getInt("BikeID");
                bikeName = results.getString("BikeName");
                station  = results.getString("Station_Rented");
                status   = results.getString("Status");
                user     = results.getInt("User_ID");
                time     = results.getString("Time_Rented");
                duration = results.getInt("Duration");
                
                if(status.equalsIgnoreCase("Rented")){
                    c=0;    //reset column
                    notReturnedTable.setValueAt(bikeName, r, c);
                    c++;
                    notReturnedTable.setValueAt(user, r, c);
                    c++;
                    notReturnedTable.setValueAt(duration, r, c);
                    c++;
                    r++;
                    duration = duration + 1; 
                    System.out.println(duration);
                    
                    //update bike_status table
                    String sqlstmt =  "UPDATE bike_status SET "
                            + "Duration = "+(duration)+" WHERE `BikeName` = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt); 
                        cs.execute(); //execute the sql command 
                }else{
                    //reset duration of the bike in the bike_status table
                    String sqlstmt =  "UPDATE bike_status SET "
                            + "Duration = 0 WHERE `BikeName` = '"+bikeName+"';";   

                    cs = adminData.con.prepareCall(sqlstmt); 
                    cs.execute(); //execute the sql statement
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
   
   public void dashboard_Update(){
       //update Bicycles count status on dashboard
       bikeAvailableLabel.setText(Integer.toString(available));
       bikeRentedLabel.setText(Integer.toString(rented));
       bikeReservationLabel.setText(Integer.toString(reserved));
       bikeRepairLabel.setText(Integer.toString(repair));
       bikeTotalLabel.setText(Integer.toString(table1Row));
       
       //update station Bicycles count status on dashboard
       station1_bikeLabel.setText(Integer.toString(station1_bikeCount));
       station2_bikeLabel.setText(Integer.toString(station2_bikeCount));
       
       userCountLabel.setText(Integer.toString(userCount));
       
   }
   
   public void get_bike_available(String status){
       if(status.equalsIgnoreCase("available")){
           available++;
       }else if(status.equalsIgnoreCase("returned")){
           available++;
       }
       
       if(status.equalsIgnoreCase("rented")){
           rented++;
       }
       
       if(status.equalsIgnoreCase("reserved")){
           reserved++;
       }
       
       
       if(status.equalsIgnoreCase("repair")){
           repair++;
       }
   }
   
   public void get_Station_bikes(String StationName, String status){
       if(status.equalsIgnoreCase("Available")){
        if(StationName.equalsIgnoreCase("station1")){
            station1_bikeCount++;
        }

        if(StationName.equalsIgnoreCase("station2")){
            station2_bikeCount++;
        }
        }
   }
   
   /**
    * Updates all tables from the given entry in the all_entries table
    * 
    */
   public void update_all(){
       
        int    c=0,r=0,rowcount = 0;
        String bikeName = null,station = null,status = null,time = null;
        String station_r = null,status_r = null,time_r = null;
        int    bikeId = 0,user = 0,duration = 0,post_status=0,statusID = 0,ret_flag = 0;
        String message;
        CallableStatement cs = null;
            
         
        Vector<String> data= new Vector<String>();
        Date mydate = new Date();
 
        try {
            ResultSet results = adminData.rs;
            Statement stmt = adminData.stmt;
            
            // dm.setRowCount(rowcount);
            
            results = stmt.executeQuery("SELECT * FROM all_entries");
            
            while (results.next()){
                bikeId    = results.getInt("Bike_ID");
                bikeName  = results.getString("BikeName");
                station   = results.getString("Station");
                time      = results.getString("Time");
                status    = results.getString("Status");
                user      = results.getInt("User");
                post_status =  results.getInt("post_status");
                
                if(post_status == 1){
                    //update bike_status table
                    if(status.equalsIgnoreCase("Rented")){
                        String sqlstmt =  "UPDATE bike_status SET "
                            + "Station_Rented = '"+station+"',Status = '"+status+"',"
                            + "User_ID = "+user+",Time_Rented = '"+time+"', return_flag = 0 "
                            + " WHERE `bike_status`.`BikeName` = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt); 
                        cs.execute(); //execute the sql command 
                        
                        //update all_entries table
                        String sqlstmt2 =  "UPDATE all_entries SET "
                            + "post_status = 0 WHERE BikeName = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt2); 
                        cs.execute(); //execute the sql command   
                        
                      
                        //When bicycle is returned
                    }else if(status.equalsIgnoreCase("Available")){
                        
                        String sqlstmt =  "UPDATE bike_status SET "
                            + "Station_Returned = '"+station+"',Status = '"+status+"',"
                            + "User_ID = "+user+", Time_Returned = '"+time+"', return_flag = 1 "
                                + "WHERE `bike_status`.`BikeName` = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt); 
                        cs.execute(); //execute the sql command 
                        
                        //update all_entries table
                        String sqlstmt2 =  "UPDATE all_entries SET "
                            + "post_status = 0 WHERE BikeName = '"+bikeName+"';";   
                        
                        cs = adminData.con.prepareCall(sqlstmt2); 
                        cs.execute(); //execute the sql command 
                        
                        
                        
                    }else{
                        String sqlstmt =  "UPDATE bike_status SET "
                            + "Station_Rented = '"+station+"',Status = '"+status+"',"
                            + "User_ID = "+user+",Time_Rented = '"+time+"' WHERE `bike_status`.`BikeName` = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt); 
                        cs.execute(); //execute the sql command 
                        
                        //update all_entries table
                        String sqlstmt2 =  "UPDATE all_entries SET "
                            + "post_status = 0 WHERE BikeName = '"+bikeName+"';";   

                        cs = adminData.con.prepareCall(sqlstmt2); 
                        cs.execute(); //execute the sql command   
                    
                    }
                        
                    System.out.println(bikeName + " is updated.");
                    
                } 
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
   }
   
public void update_bike_Entries(){


}
   
// ----------------- SOUND FUNCTIONS ---------------- //   
   public void play_Welcome() throws Exception {
         
         File in = new File("C:\\Users\\CHING25\\Documents\\IO System Software\\BicycleSystem\\src\\bicyclesystem\\pad_confirm.wav");
           AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(in);
           Clip play = AudioSystem.getClip();
           play.open(audioInputStream);
           FloatControl volume= (FloatControl)play.getControl(FloatControl.Type.MASTER_GAIN);
           volume.setValue(0.01f); // Reduce volume by 10 decibels.
           play.start();
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    // A GUI element to prevent the Clip's daemon Thread
                    // from terminating at the end of the main()
                    //JOptionPane.showMessageDialog(null, "");
                }
            });
   }
   
   
   public void play_Hover() {
         
        try {
            File in = new File("C:\\Users\\CHING25\\Documents\\IO System Software\\BicycleSystem\\src\\bicyclesystem\\simple_resonant_click.wav");
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(in);
            Clip play = AudioSystem.getClip();
            play.open(audioInputStream);
            FloatControl volume= (FloatControl)play.getControl(FloatControl.Type.MASTER_GAIN);
            volume.setValue(1.0f); // Reduce volume by 10 decibels.
            play.start();
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    // A GUI element to prevent the Clip's daemon Thread
                    // from terminating at the end of the main()
                    //JOptionPane.showMessageDialog(null, "");
                }
            });
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   
   public void play_Click(){
         
        try {
            File in = new File("C:\\Users\\CHING25\\Documents\\IO System Software\\BicycleSystem\\src\\bicyclesystem\\blip1.wav");
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(in);
            Clip play = AudioSystem.getClip();
            play.open(audioInputStream);
            FloatControl volume= (FloatControl)play.getControl(FloatControl.Type.MASTER_GAIN);
            volume.setValue(1.0f); // Reduce volume by 10 decibels.
            play.start();
            SwingUtilities.invokeLater(new Runnable() {
                public void run() {
                    // A GUI element to prevent the Clip's daemon Thread
                    // from terminating at the end of the main()
                    //JOptionPane.showMessageDialog(null, "");
                }
            });
        } catch (LineUnavailableException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedAudioFileException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
   
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DashboardBtn;
    private javax.swing.JPanel DashboardPanel;
    private javax.swing.JLabel SearchBtn;
    private javax.swing.JLabel aboutBtn;
    private javax.swing.JPanel aboutPanel;
    private javax.swing.JLabel bikeAvailableLabel;
    private javax.swing.JLabel bikeRentedLabel;
    private javax.swing.JLabel bikeRepairLabel;
    private javax.swing.JLabel bikeReservationLabel;
    private javax.swing.JLabel bikeTotalLabel;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel logoutBtn;
    private javax.swing.JTable notReturnedTable;
    private javax.swing.JLabel registerBtn;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel station1_bikeLabel;
    private javax.swing.JLabel station2_bikeLabel;
    private javax.swing.JLabel userCountLabel;
    // End of variables declaration//GEN-END:variables
}